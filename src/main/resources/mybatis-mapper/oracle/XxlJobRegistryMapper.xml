<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xxl.job.admin.dao.XxlJobRegistryDao">

    <resultMap id="XxlJobRegistry" type="com.xxl.job.admin.core.model.XxlJobRegistry">
        <result column="ID" property="id"/>
        <result column="REGISTRY_GROUP" property="registryGroup"/>
        <result column="REGISTRY_KEY" property="registryKey"/>
        <result column="REGISTRY_VALUE" property="registryValue"/>
        <result column="UPDATE_TIME" property="updateTime"/>
    </resultMap>

    <sql id="Base_Column_List">
        t.ID,
        t.REGISTRY_GROUP,
        t.REGISTRY_KEY,
        t.REGISTRY_VALUE,
        t.UPDATE_TIME
    </sql>

    <select id="findDead" parameterType="java.util.HashMap" resultType="java.lang.Integer">
        SELECT t.ID
        FROM XXL_JOB_REGISTRY t
        WHERE t.UPDATE_TIME  <![CDATA[ < ]]>  (#{nowTime} - INTERVAL '${timeout}' SECOND)
    </select>

    <delete id="removeDead" parameterType="java.lang.Integer">
        DELETE FROM XXL_JOB_REGISTRY
        WHERE ID in
        <foreach collection="ids" item="item" open="(" close=")" separator=",">
            #{item,jdbcType=NUMERIC}
        </foreach>
    </delete>

    <select id="findAll" parameterType="java.util.HashMap" resultMap="XxlJobRegistry">
        SELECT <include refid="Base_Column_List"/>
        FROM XXL_JOB_REGISTRY t
        WHERE t.UPDATE_TIME  <![CDATA[ > ]]>  (#{nowTime} - INTERVAL '${timeout}' SECOND)
    </select>

    <insert id="registrySaveOrUpdate">
        <selectKey keyProperty="id" order="BEFORE" resultType="java.lang.Integer">
            select SEQ_XXL_JOB_REGISTRY_ID.nextval from dual
        </selectKey>
        MERGE INTO xxl_job_registry t
        USING (
            SELECT
            #{id,jdbcType=NUMERIC} as id,
            #{registryGroup,jdbcType=VARCHAR} AS registry_group,
            #{registryKey,jdbcType=VARCHAR} AS registry_key,
            #{registryValue,jdbcType=VARCHAR} AS registry_value,
            #{updateTime,jdbcType=DATE} AS update_time
            FROM DUAL
        ) s
        ON (
            t.registry_group = s.registry_group
            AND t.registry_key = s.registry_key
            AND t.registry_value = s.registry_value
        )
        WHEN MATCHED THEN
            UPDATE SET t.update_time = s.update_time
        WHEN NOT MATCHED THEN
            INSERT (id, registry_group, registry_key, registry_value, update_time)
            VALUES (s.id, s.registry_group, s.registry_key, s.registry_value, s.update_time)
    </insert>

    <delete id="registryDelete">
        DELETE
        FROM XXL_JOB_REGISTRY
        WHERE REGISTRY_GROUP = #{registryGroup,jdbcType=VARCHAR}
          AND REGISTRY_KEY = #{registryKey,jdbcType=VARCHAR}
          AND REGISTRY_VALUE = #{registryValue,jdbcType=VARCHAR}
    </delete>

</mapper>
